<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Become a Full-Stack Tester Here</title>
    <link>https://ifulltest.github.io/en/posts/</link>
    <description>Recent content in Posts on Become a Full-Stack Tester Here</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2019-{year} Gary Gao. All Rights Reserved.</copyright>
    <lastBuildDate>Tue, 03 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://ifulltest.github.io/en/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Site Map</title>
      <link>https://ifulltest.github.io/en/posts/site-road-map/</link>
      <pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/site-road-map/</guid>
      <description>&lt;p&gt;&lt;em&gt;When you first go on this website, the site road map can guide you quickly through the  structure of the website and  the author&amp;rsquo;s habits of classification&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TradeMe API 测试的第一个演示</title>
      <link>https://ifulltest.github.io/en/posts/tm-api-first-demo/</link>
      <pubDate>Tue, 20 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/tm-api-first-demo/</guid>
      <description>&lt;h2 id=&#34;写这个系列的原因是什么&#34;&gt;写这个系列的原因是什么？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;1用于测试技能演示&#34;&gt;1、用于测试技能演示。&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;作者希望通过一系列自动化测试实践分享来展示他在 API、UI、移动自动化测试领域的综合技能。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;2用于指导自动化测试新手&#34;&gt;2、用于指导自动化测试新手。&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;选择一款流行的产品来演示其API自动化测试过程，将是上述人员快速进入自动化测试领域以节省时间的一种简便方法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;3互相促进共同进步&#34;&gt;3、互相促进、共同进步。&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Trade Me-2-典型交易</title>
      <link>https://ifulltest.github.io/en/posts/tm-api-typical-transactions/</link>
      <pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/tm-api-typical-transactions/</guid>
      <description>如何挑选典型的交易？ 在编写 API 测试脚本之前，我们需要从 TradeMe 中挑选一些典型的交易。
我们选择的这些事务更好地涵盖了不同类型的请求，例如get、post、delete。
这些交易的一部分应该在业务层面相互关联。
API -检索一般类别   业务范围选择：获取所有子类别。   API 功能：检索全部或部分 Trade Me 类别树。   前端页面     关键请求字段     关键响应字段 - 类别树。           Name String or null 类别的名称。   Number String or null 类别的唯一标识符，例如“0004-0369-6076-”。我们计划将其更改为数字标识符（例如“6076”），因此您应该确保您可以处理这两种格式。   Path String or null 此类别的完整 URL 路径，例如“/Home-living/Beds-bedroom-furniture/Bedside-tables”。   Subcategories Collection of or null 属于该类别的子类别列表。   … … …    更多参考：检索一般类别</description>
    </item>
    
    <item>
      <title>Trade Me-3-检索一般类别 API 测试</title>
      <link>https://ifulltest.github.io/en/posts/tm-api-retrieve-general-categories/</link>
      <pubDate>Sat, 24 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/tm-api-retrieve-general-categories/</guid>
      <description>API - 检索一般类别脚本开发步骤 API规范-&amp;gt;业务展示-&amp;gt;API测试脚本调试-&amp;gt;API测试脚本增强-&amp;gt;API测试脚本Negative Cases扩展-&amp;gt;API测试脚本发布
API规范   API 功能：检索全部或部分 Trade Me 类别树。   关键请求字段   关键响应字段 - 类别树。           Name String or null 类别的名称。   Number String or null 类别的唯一标识符，例如“0004-0369-6076-”。我们计划将其更改为数字标识符（例如“6076”），因此您应该确保您可以处理这两种格式。   Path String or null 此类别的完整 URL 路径，例如“/Home-living/Beds-bedroom-furniture/Bedside-tables”。   Subcategories Collection of or null 属于该类别的子类别列表。   … … …    更多 API 规范参考Retrieve general category。</description>
    </item>
    
    <item>
      <title>Trade Me-4-检索您的监视列表 API 测试</title>
      <link>https://ifulltest.github.io/en/posts/tm-api-retrieve-watchlist/</link>
      <pubDate>Sun, 25 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/tm-api-retrieve-watchlist/</guid>
      <description>API - 检索您的监视列表脚本开发步骤 API规范-&amp;gt;业务展示-&amp;gt;API测试脚本调试-&amp;gt;API测试脚本增强-&amp;gt;API测试脚本Negative Cases扩展-&amp;gt;API测试脚本发布
API规范   API 功能：检索经过身份验证的用户监视列表中的项目列表。   关键请求字段     关键响应字段 - 经过身份验证的用户的监视列表。            TotalCount Integer 集合中的结果总数。可以大于返回结果的数量。    Page Integer 当前结果页的索引（从 1 开始）。    PageSize Integer 当前页面中的结果数。    List Collection of or null 当前页面中的结果列表。     ListingId 长整数 商家信息的 ID。    BidCount 整数 项目的出价数量。   … … … …      更多 API 规范参考**检索您的监视列表** 。</description>
    </item>
    
    <item>
      <title>Trade Me-5-从您的监视列表中删除列表 API 测试</title>
      <link>https://ifulltest.github.io/en/posts/tm-api-rm-a-listing-from-watchlist/</link>
      <pubDate>Mon, 26 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/tm-api-rm-a-listing-from-watchlist/</guid>
      <description>API - 从监视列表脚本开发步骤中删除列表 API规范-&amp;gt;业务展示-&amp;gt;API测试脚本调试-&amp;gt;API测试脚本增强-&amp;gt;API测试脚本Negative Cases扩展-&amp;gt;API测试脚本发布
API规范   API 功能：从经过身份验证的用户的监视列表中删除列表。   关键请求字段     关键响应字段 - 有关操作是否成功的详细信息。   尝试删除不存在或不在监视列表中的拍卖不会产生错误。
          Success Boolean 指示操作是否成功。   Description String or null 错误的描述，如果操作失败。    更多 API 规范是指从您的监视列表中删除列表。
  示例请求   DELETE https://api.tmsandbox.co.nz/v1/MyTradeMe/WatchList/0000000000.JSON
  示例响应   { &amp;#34;Success&amp;#34;: true, &amp;#34;Description&amp;#34;: &amp;#34;Success&amp;#34; } 业务介绍   前端页面 - 关注列表页面     前端页面 - 确认删除项目页面     业务范围选择   链式组合交易</description>
    </item>
    
    <item>
      <title>Trade Me-6-检索即将关闭列表 API 测试</title>
      <link>https://ifulltest.github.io/en/posts/tm-api-retrieve-closing-soon-listings/</link>
      <pubDate>Tue, 27 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/tm-api-retrieve-closing-soon-listings/</guid>
      <description>API - 检索即将关闭的列表脚本开发步骤 API规范-&amp;gt;业务展示-&amp;gt;API测试脚本调试-&amp;gt;API测试脚本增强-&amp;gt;API测试脚本Negative Cases扩展-&amp;gt;API测试脚本发布
API规范   API 功能：检索全国或单个地区即将关闭的项目。   关键请求字段   更多参考：检索即将关闭的列表
  关键响应字段 - 类别树。           TotalCount Integer 集合中的结果总数。可以大于返回结果的数量。   TotalCountTruncated Boolean 如果结果总数超过允许的最大值并被截断，则为真。   Page Integer 当前结果页的索引（从 1 开始）。   PageSize Integer 当前页面中的结果数。   List Collection of or null 当前页面中的结果列表。    ListingId 长整数   … … …    更多参考：检索即将关闭的列表</description>
    </item>
    
    <item>
      <title>Trade Me-7-将列表添加到您的监视列表 API 测试</title>
      <link>https://ifulltest.github.io/en/posts/tm-api-add-a-listing-to-watchlist/</link>
      <pubDate>Mon, 26 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/tm-api-add-a-listing-to-watchlist/</guid>
      <description>API - 将列表添加到您的监视列表脚本开发步骤 API规范-&amp;gt;业务展示-&amp;gt;API测试脚本调试-&amp;gt;API测试脚本增强-&amp;gt;API测试脚本Negative Cases扩展-&amp;gt;API测试脚本发布
API规范   API 功能：将列表添加到经过身份验证的用户的监视列表。   关键请求字段   更多参考：将列表添加到您的监视列表关键响应字段 - 有关操作是否成功的详细信息。 尝试删除不存在或不在监视列表中的拍卖不会产生错误。
          Success Boolean 指示操作是否成功。   Description String or null 错误的描述，如果操作失败。    示例请求 POST https://api.tmsandbox.co.nz/v1/MyTradeMe/WatchList/2149294825.JSON
 示例响应：  { &amp;#34;Success&amp;#34;: true, &amp;#34;Description&amp;#34;: &amp;#34;Success&amp;#34; } 业务介绍   前端页面 - 即将关闭商品详情页面     前端页面 - 关注列表页面     业务范围选择   链式组合交易</description>
    </item>
    
    <item>
      <title>Trade Me-8-检索您赢得的物品 API 测试</title>
      <link>https://ifulltest.github.io/en/posts/tm-api-retrieve-won-items/</link>
      <pubDate>Tue, 27 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/tm-api-retrieve-won-items/</guid>
      <description>API - 检索您赢得的物品脚本开发步骤 API规范-&amp;gt;业务展示-&amp;gt;API测试脚本调试-&amp;gt;API测试脚本增强-&amp;gt;API测试脚本Negative Cases扩展-&amp;gt;API测试脚本发布
API规范   API 功能：检索经过身份验证的用户的购买清单。   多数量拍卖可以多次购买。
  关键请求字段     关键响应字段 - 经过身份验证的用户已购买的项目列表。            TotalCount Integer 集合中的结果总数。可以大于返回结果的数量。    Page Integer 当前结果页的索引（从 1 开始）。    PageSize Integer 当前页面中的结果数。    List Collection of or null 当前页面中的结果列表。     ListingId 长整数 商家信息的 ID。   … … … …   PurchaseId Integer 标识销售的唯一 ID。    … … … …      更多参考：检索您赢得的物品</description>
    </item>
    
    <item>
      <title>Trade Me-9-从您赢得的物品列表中删除购买 API 测试</title>
      <link>https://ifulltest.github.io/en/posts/tm-api-rm-a-purchase-from-won-list/</link>
      <pubDate>Wed, 28 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/tm-api-rm-a-purchase-from-won-list/</guid>
      <description>API - 从您赢得的物品列表中删除购买脚本开发步骤 API规范-&amp;gt;业务展示-&amp;gt;API测试脚本调试-&amp;gt;API测试脚本增强-&amp;gt;API测试脚本Negative Cases扩展-&amp;gt;API测试脚本发布
API规范   API 功能：从赢得的项目列表中隐藏一个列表。   关键请求字段     关键响应字段 - 有关操作是否成功的详细信息。   请注意，此操作仅在操作完成后在赢得的物品列表中仍然存在购买的情况下才会报告失败。在所有其他情况下，此 API 将报告成功（例如，如果购买 ID 无效或购买已被删除，它将报告成功）。
          Success Boolean 指示操作是否成功。   Description String or null 错误的描述，如果操作失败。      示例请求   GET https://api.tmsandbox.co.nz/v1/MyTradeMe/Won/All.JSON
  示例响应   { &amp;#34;Success&amp;#34;: true, &amp;#34;Description&amp;#34;: &amp;#34;Success&amp;#34; } 业务介绍   前端页面 - 赢得列表页面（选择要删除的给定项目）     前端页面 - 确认从赢得的项目列表中删除给定的项目。     业务范围选择   链式投资组合交易</description>
    </item>
    
    <item>
      <title>Trade Me-10-常规搜索API测试</title>
      <link>https://ifulltest.github.io/en/posts/tm-api-general-search/</link>
      <pubDate>Thu, 29 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/tm-api-general-search/</guid>
      <description>API - 常规搜索脚本开发步骤 API规范-&amp;gt;业务展示-&amp;gt;API测试脚本调试-&amp;gt;API测试脚本增强-&amp;gt;API测试脚本Negative Cases扩展-&amp;gt;API测试脚本发布
API规范   API 功能：允许您按类别、关键字或这两者的组合搜索 Trade Me 上的列表。   结果集可以通过各种属性进行过滤，包括“立即购买”、“立即付款”、“商品状况”或“卖家”的可用性。
  关键请求字段             page Integer (optional) 要返回的结果集的页码，从 1 开始。默认为 1。   … … …   rows Integer (optional) 每页结果数；也是要返回的最大结果数。对于未经身份验证的请求，最大值为 25，对于经过身份验证的请求，最大值为 500。默认为 25（未认证）或 50（已认证）。   … … …    更多参考：常规搜索  关键响应字段              TotalCount Integer 集合中的结果总数。可以大于返回结果的数量。    TotalCountTruncated Boolean 如果结果总数超过允许的最大值并被截断，则为真。    Page Integer 当前结果页的索引（从 1 开始）。    PageSize Integer 当前页面中的结果数。    List Collection of or null 当前页面中的结果列表。     ListingId Long Integer 商家信息的 ID。    BuyNowPrice Number 立即购买价格。    HasBuyNow Boolean 指示该项目是否有立即购买。   … … … …    更多参考：常规搜索  示例请求   GET https://api.</description>
    </item>
    
    <item>
      <title>Trade Me-11-检索单个列表 API 测试的详细信息</title>
      <link>https://ifulltest.github.io/en/posts/tm-api-retrieve-listings-details/</link>
      <pubDate>Thu, 29 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/tm-api-retrieve-listings-details/</guid>
      <description>API - 检索单个列表的详细信息脚本开发步骤 API规范-&amp;gt;业务展示-&amp;gt;API测试脚本调试-&amp;gt;API测试脚本增强-&amp;gt;API测试脚本Negative Cases扩展-&amp;gt;API测试脚本发布
API规范   API 功能：检索单个列表的详细信息。   关键请求字段     关键响应字段 - 列表的详细信息。              ListingId Long Integer 商家信息的 ID。    … … …    ShippingOptions Collection of or null 运输选项列表。     Method String or null 递送方式的名称（例如“NZ Courier”、“Rural Delivery”）。仅当 ShippingType 为自定义时适用。    ShippingId Long Integer 运输选项的 ID（在出价或立即购买时使用）。列出项目时不需要。   … … … …      示例请求   GET https://api.</description>
    </item>
    
    <item>
      <title>Trade Me-12-使用 Buy Now API 测试购买拍卖</title>
      <link>https://ifulltest.github.io/en/posts/tm-api-buy-an-auction-using-buy-now/</link>
      <pubDate>Thu, 29 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/tm-api-buy-an-auction-using-buy-now/</guid>
      <description>API - 使用“立即购买”购买拍卖脚本开发步骤 API规范-&amp;gt;业务展示-&amp;gt;API测试脚本调试-&amp;gt;API测试脚本增强-&amp;gt;API测试脚本Negative Cases扩展-&amp;gt;API测试脚本发布
API规范   API 功能：使用“立即购买”购买商品。   关键请求字段     关键响应字段 - Buy Now 请求的详细信息。              Success Boolean 指示操作是否成功。    Description String or null 错误的描述，如果操作失败。    StatusCode Enumeration 立即购买请求的状态。     Success 0 竞标成功。   … … … …   PurchaseId Long Integer 刚刚购买的 ID。    … … … …      示例请求   POST https://api.</description>
    </item>
    
    <item>
      <title>Trade Me-13-场景和Newman报告</title>
      <link>https://ifulltest.github.io/en/posts/tm-api-scenarios-and-newman-report/</link>
      <pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/tm-api-scenarios-and-newman-report/</guid>
      <description>场景处于API自动化测试中的位置 典型交易选择 -&amp;gt; 对应 API 选择 -&amp;gt; Scripting -&amp;gt;场景和报告（我在这儿） -&amp;gt; CICD
典型交易选择 典型交易选择指：Trade Me-2-典型交易
对应的API选择和脚本编写 对应的API选择和脚本编写参考：
Trade Me-3-检索一般类别 API 测试 Trade Me-4-检索您的监视列表 API 测试 Trade Me-5-从您的监视列表中删除列表 API 测试 Trade Me-6-检索即将关闭列表 API 测试 Trade Me-7-将列表添加到您的监视列表 API 测试 Trade Me-8-检索您赢得的物品 API 测试 Trade Me-9-从您赢得的物品列表中删除购买 API 测试 Trade Me-10-通用搜索API测试 Trade Me-11-检索单个列表的详细信息 API 测试 Trade Me-12-使用 Buy Now购买拍卖 API 测试 运行场景的两种方式 Postman 使用集合的概念来存储您的 API 测试脚本作为基本场景。</description>
    </item>
    
    <item>
      <title>Trade Me-14-Jenkins-持续集成流程</title>
      <link>https://ifulltest.github.io/en/posts/tm-api-jenkins-cicd-process/</link>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/tm-api-jenkins-cicd-process/</guid>
      <description>API自动化测试持续集成流程 典型事务选择 -&amp;gt; 对应 API 选择 -&amp;gt; 脚本编写 -&amp;gt; 场景和报告 -&amp;gt; 持续集成（我在这儿） 典型交易选择 典型交易选择指：Trade Me-2-典型交易 对应的API选择和脚本编写 对应的API选择和脚本编写参考： Trade Me-3-检索一般类别 API 测试 Trade Me-4-检索您的监视列表 API 测试 Trade Me-5-从您的监视列表中删除列表 API 测试 Trade Me-6-检索即将关闭列表 API 测试 Trade Me-7-将列表添加到您的监视列表 API 测试 Trade Me-8-检索您赢得的物品 API 测试 Trade Me-9-从您赢得的物品列表中删除购买 API 测试 Trade Me-10-通用搜索API测试 Trade Me-11-检索单个列表 API 测试的详细信息 Trade Me-12-使用 Buy Now API 测试购买拍卖 场景和报告 场景和报告参考：Trade Me-13-场景和Newman报告 。 Jenkins 持续集成流程实践   Jenkins 持续集成流程的步骤   准备 -&amp;gt; 新建 CI 作业 -&amp;gt; 作业配置 -&amp;gt; 作业运行 -&amp;gt; 作业结果检查 -&amp;gt; 电子邮件给相关人   准备工作 - 相关工具安装   Jenkins安装参考：如何安装Jenkins？ Git Bash安装参考：如何安装Git Bash？   准备工作 - 环境启动   在构建 CI 作业之前初始化 Postman 相关脚本、数据、报告、存储库的文件夹结构。 rem create folder for Postman collection, env parameter, temporary parameter, reports pushd d:\Software &amp;amp;&amp;amp; md postman\collections postman\data postman\reports\hisreports postman\postman_github 将 Postman 主目录设置为系统环境参数 setx &amp;#34;POSTMAN_HOME&amp;#34; &amp;#34;D:\Software\postman&amp;#34; /M   准备工作 - 将 Postman 集合和环境变量文件导出到本地   将 Postman 集合文件导出到本地是指：将 Postman 集合文件导出到本地</description>
    </item>
    
    <item>
      <title>How to install Git Bash?</title>
      <link>https://ifulltest.github.io/en/posts/git-bash-installation/</link>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/git-bash-installation/</guid>
      <description>&lt;p&gt;&lt;em&gt;Git is a set of command line utility programs that are designed to execute on a Unix style command-line environment.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Git Bash is an application for Microsoft Windows environments which provides an emulation layer for a Git command line experience.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This article will&lt;/em&gt; concisely &lt;em&gt;introduce one of the basic Git knowledge: how to install the Git Bash&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to install JDK?</title>
      <link>https://ifulltest.github.io/en/posts/jdk-installation/</link>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/jdk-installation/</guid>
      <description>&lt;p&gt;&lt;em&gt;The JDK - &amp;lsquo;Java™ Platform, Standard Edition Development Kit &#39; is a development environment for building applications, and components using the Java programming language.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;It includes tools useful for developing and testing programs written in the Java programming language and running on the Java platform&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to install Jenkins?</title>
      <link>https://ifulltest.github.io/en/posts/jenkins-installation/</link>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/jenkins-installation/</guid>
      <description>&lt;p&gt;&lt;em&gt;The leading open source automation server, Jenkins provides hundreds of plugins to support building, deploying and automating any project.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This article will&lt;/em&gt; concisely &lt;em&gt;introduce one of the basic Jenkins knowledge: how to install the Jenkins &amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to install Newman?</title>
      <link>https://ifulltest.github.io/en/posts/newman-installation/</link>
      <pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/newman-installation/</guid>
      <description>&lt;h2 id=&#34;the-steps-of-newman-installation&#34;&gt;&lt;em&gt;The steps of Newman installation&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Download  and install the Newman application -&amp;gt; Verify your Newman installation by version -&amp;gt; Run Newman to get reports &amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to install Node.js?</title>
      <link>https://ifulltest.github.io/en/posts/nodejs-installation/</link>
      <pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/nodejs-installation/</guid>
      <description>&lt;h2 id=&#34;the-steps-of-nodejs-installation&#34;&gt;&lt;em&gt;The steps of Node.js installation&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Download  and install the Node.js application -&amp;gt; Verify your Node.js installation by version -&amp;gt; Create a simple script &amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to install Postman?</title>
      <link>https://ifulltest.github.io/en/posts/postman-installation/</link>
      <pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/postman-installation/</guid>
      <description>&lt;h2 id=&#34;the-steps-of-postman-installation&#34;&gt;&lt;em&gt;The steps of Postman installation&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Download and install the postman application -&amp;gt; Register your account and create the workspace -&amp;gt; Create the collection -&amp;gt; Add a request and begin your scripting &amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to install Cypress?</title>
      <link>https://ifulltest.github.io/en/posts/cypress-installation/</link>
      <pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/cypress-installation/</guid>
      <description>&lt;p&gt;&lt;em&gt;We will start the journey of Cypress discovery from here.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This article will quickly introduce what is Cypress, what can Cypress do, steps of installation and starting  the Cypress &amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to install JMeter?</title>
      <link>https://ifulltest.github.io/en/posts/jmeter-installation/</link>
      <pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/jmeter-installation/</guid>
      <description>&lt;p&gt;&lt;em&gt;We will start the journey of JMeter discovery from here.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This article will talk about JMeter installation-related knowledge &amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What are the different commands or operations in GitHub?</title>
      <link>https://ifulltest.github.io/en/posts/github-common-commands-or-operations/</link>
      <pubDate>Sat, 19 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/github-common-commands-or-operations/</guid>
      <description>&lt;p&gt;&lt;em&gt;As a public repository, GitHub mainly restored the source code from the local system, using git to control the software version. There are several commands frequently used from local git to GitHub&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is a release pipeline?</title>
      <link>https://ifulltest.github.io/en/posts/what-is-a-release-pipeline/</link>
      <pubDate>Sat, 19 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/what-is-a-release-pipeline/</guid>
      <description>&lt;p&gt;&lt;em&gt;A release pipeline can also be thought of as a workflow. A workflow whose purpose is releasing software. As such, modelling your release pipeline should simply be a case of modelling how you want to release your software&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is CI CD CT, and how they are achieved by DevOps server?</title>
      <link>https://ifulltest.github.io/en/posts/how-does-ci-cd-ct-to-be-achieved/</link>
      <pubDate>Sat, 19 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/how-does-ci-cd-ct-to-be-achieved/</guid>
      <description>&lt;p&gt;&lt;em&gt;As the picture showed, CT, CI and CD will work better when they are together. To know how they are achieved by the DevOps server, we need to see each concept of CI, CD, and CT&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is the difference between code build and compilations?</title>
      <link>https://ifulltest.github.io/en/posts/difference-of-code-build-and-compilation/</link>
      <pubDate>Sat, 19 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/difference-of-code-build-and-compilation/</guid>
      <description>&lt;p&gt;&lt;em&gt;In software development, a build is the process of converting source code files into standalone software artifact(s) that can be run on a computer, or the result of doing so. In terms of compilation, they are two different concepts&amp;hellip;.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is the purpose of a test or project management tool?</title>
      <link>https://ifulltest.github.io/en/posts/purpose-of-a-test-or-pm-tool/</link>
      <pubDate>Sat, 19 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/purpose-of-a-test-or-pm-tool/</guid>
      <description>&lt;p&gt;&lt;em&gt;The primary purpose of test or project management tools is to help managers plan, execute and control all aspects of the test ore project management process. What we benefit from such tools are&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is the role of a QA in a DevOps environment?</title>
      <link>https://ifulltest.github.io/en/posts/the-role-of-a-qa-in-a-devops-environment/</link>
      <pubDate>Sat, 19 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/the-role-of-a-qa-in-a-devops-environment/</guid>
      <description>&lt;p&gt;&lt;em&gt;In the DevOps approach, testers and developers play equally important roles. The boundaries of job responsibilities between a developer and tester become blurred in DevOps&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is VCS?</title>
      <link>https://ifulltest.github.io/en/posts/what-is-vcs/</link>
      <pubDate>Sat, 19 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/what-is-vcs/</guid>
      <description>&lt;p&gt;&lt;em&gt;Version control systems are a category of software tools that help a software team manage changes to source code over time&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How does a QA use JIRA?</title>
      <link>https://ifulltest.github.io/en/posts/how-does-a-qa-use-jira/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/how-does-a-qa-use-jira/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;em&gt;QA works with development teams to help ship features quickly and safely. 
Jira plays a part in QA to do the below works&amp;hellip;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>What are alternatives to JIRA?</title>
      <link>https://ifulltest.github.io/en/posts/what-are-alternatives-to-jira/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/what-are-alternatives-to-jira/</guid>
      <description>&lt;p&gt;&lt;em&gt;Many Jira alternatives can be chosen for your projects. Some of them are free or free with some conditions. Here is a list of alternatives&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is a GitHub repository?</title>
      <link>https://ifulltest.github.io/en/posts/github-repository/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/github-repository/</guid>
      <description>&lt;p&gt;&lt;em&gt;GitHub repository is usually used to organize a single project. Repositories can contain folders and files, images, videos, spreadsheets, and data sets – anything your project needs&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is the purpose of JIRA?</title>
      <link>https://ifulltest.github.io/en/posts/what-is-the-purpose-of-jira/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/what-is-the-purpose-of-jira/</guid>
      <description>&lt;p&gt;&lt;em&gt;Jira Software is built for every member of your software team to plan, track, and release great software&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Difference between UAT and usability testing?</title>
      <link>https://ifulltest.github.io/en/posts/difference-between-uat-and-usability-test/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/difference-between-uat-and-usability-test/</guid>
      <description>&lt;p&gt;&lt;em&gt;User acceptance testing and usability testing are two easy confusing concepts. But overall, they go from a different perspective&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How Agile Scrum Helps Solve The Problems In Traditional Software Development Models?</title>
      <link>https://ifulltest.github.io/en/posts/scrum-helps-software-development-models/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/scrum-helps-software-development-models/</guid>
      <description>&lt;p&gt;&lt;em&gt;Agile Scrum is a practice that helps continuous iteration of development and testing in the software development process. Unlike the Waterfall model, some features of Agile Scrum helps to solve the problems that traditional software development models cannot conquered&amp;hellip;.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What are different frameworks within Agile methodology?</title>
      <link>https://ifulltest.github.io/en/posts/different-agile-methodology/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/different-agile-methodology/</guid>
      <description>&lt;p&gt;&lt;em&gt;Some of the practices on different types of Agile frameworks bring significant improvement after the failure of the traditional development model. Such as  Scrum, Extreme Programming, Kan ban, Lean, Feature-Driven Development, Dynamic System Development, Crystal&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What are the real life problems with traditional way of waterfall model?</title>
      <link>https://ifulltest.github.io/en/posts/problems-of-waterfall-model/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/problems-of-waterfall-model/</guid>
      <description>&lt;p&gt;&lt;em&gt;The waterfall model is the earliest &lt;a href=&#34;https://gy0512.github.io/post/basic-test-knowledge-what-is-sdlc/&#34; target=&#34;_blank&#34;&gt;SDLC &lt;/a&gt;
approach that was used for software development. It divide the whole process of software development into separate phases. The outcome of one phase acts as the input for the next phase sequentially&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What are the similarity and difference between Scrum and Kanban?</title>
      <link>https://ifulltest.github.io/en/posts/difference-between-scrum-and-kanban/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/difference-between-scrum-and-kanban/</guid>
      <description>&lt;p&gt;&lt;em&gt;This article focus on the similarity and difference between Scrum and Kanban. As to the concept and basic featues of Scrum and Kanban, can refer to &amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is regression testing with example?</title>
      <link>https://ifulltest.github.io/en/posts/what-is-regression-testing-with-example/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/what-is-regression-testing-with-example/</guid>
      <description>&lt;p&gt;&lt;em&gt;Regression testing will be performed after functional modification or bug is fixed. These two activities may damage at a different extent to other functions that are related to the function need to be modified or repaired&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Difference between alpha and beta testing?</title>
      <link>https://ifulltest.github.io/en/posts/difference-between-alpha-and-beta-testing/</link>
      <pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/difference-between-alpha-and-beta-testing/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Alpha testing is performed in the controlled developing environment by real users but not internal developers or testers. It is often going after finishing a module or the whole system.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Beta testing is performed in the uncontrolled external environment by real users. It is often going after the stable version of Alpha testing&amp;hellip;&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>How do you determine priority and severity of a defect?</title>
      <link>https://ifulltest.github.io/en/posts/determine-defect-the-priority-and-severity/</link>
      <pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/determine-defect-the-priority-and-severity/</guid>
      <description>&lt;p&gt;&lt;em&gt;Severity indicates the degree of damage defects impact to quality.Priority indicates the order to fix defects.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Severity and priority as two crucial aspects to defects; have some distinctions and connections.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;In general, high severity often with high priority, but that is not exactly one-to-one correspondence&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How do you go about writing test conditions and cases for new functionality?</title>
      <link>https://ifulltest.github.io/en/posts/writing-conditions-and-cases-for-new-func/</link>
      <pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/writing-conditions-and-cases-for-new-func/</guid>
      <description>&lt;p&gt;&lt;em&gt;As is shown below, generally including 4 classes of test conditions to expend test cases.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;They are: valid verification, invalid verification, user interface capabilities, user experience capabilities&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How do you log defects?</title>
      <link>https://ifulltest.github.io/en/posts/how-do-you-log-defects/</link>
      <pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/how-do-you-log-defects/</guid>
      <description>&lt;p&gt;&lt;em&gt;Defects related activities mainly includes: select  defect tracking tool, log defects, track and close defects, retrospect defect report&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What are different types of functional testing?</title>
      <link>https://ifulltest.github.io/en/posts/different-types-of-functional-testing/</link>
      <pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/different-types-of-functional-testing/</guid>
      <description>&lt;p&gt;&lt;em&gt;The functional test is from various aspects to measure whether the software is ready to deliver to the business world&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is the difference between system, integration and E2E testing?</title>
      <link>https://ifulltest.github.io/en/posts/difference-between-sit-and-e2e-testing/</link>
      <pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/difference-between-sit-and-e2e-testing/</guid>
      <description>&lt;p&gt;&lt;em&gt;The software will experience unit testing, integration testing, system testing, acceptance testing to be delivered to the real-world. What&amp;rsquo;s the difference between integration testing, system testing, and end-to-end testing?&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How does software get developed?</title>
      <link>https://ifulltest.github.io/en/posts/how-does-software-get-developed/</link>
      <pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/how-does-software-get-developed/</guid>
      <description>&lt;p&gt;&lt;em&gt;A software normally get developed by business requirement collection, product design, product developing, product test, product deployment, product operating and monitor&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How does software get hosted?</title>
      <link>https://ifulltest.github.io/en/posts/how-does-software-get-hosted/</link>
      <pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/how-does-software-get-hosted/</guid>
      <description>&lt;p&gt;&lt;em&gt;Clients -&amp;gt; CDN -&amp;gt; Nginx -&amp;gt; Static Date or Dynamic Data or Cache -&amp;gt; SQL Database or NoSQL Database&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How would you go about testing a new requirement and what&#39;s the process?</title>
      <link>https://ifulltest.github.io/en/posts/the-process-of-testing-a-new-requirement/</link>
      <pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/the-process-of-testing-a-new-requirement/</guid>
      <description>&lt;p&gt;&lt;em&gt;As is shown below, when a new requirement coming, Normally we will do a static check, test design, test preparation, then start a series of checks and test activities&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What are the different environments in a software development team?</title>
      <link>https://ifulltest.github.io/en/posts/different-environments-in-development-team/</link>
      <pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/different-environments-in-development-team/</guid>
      <description>&lt;p&gt;&lt;em&gt;The differences are shown below, normally will have development, test, pre-production, and production environment for delivering software&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What are the different layers in an app and how do they communicate with each other?</title>
      <link>https://ifulltest.github.io/en/posts/different-layers-communicate-in-an-app/</link>
      <pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/different-layers-communicate-in-an-app/</guid>
      <description>&lt;p&gt;&lt;em&gt;As is shown below, a typical 3-tiers software application includes a presentation layer, business layer, and data layer&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is a cloud service?</title>
      <link>https://ifulltest.github.io/en/posts/what-is-a-cloud-service/</link>
      <pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/what-is-a-cloud-service/</guid>
      <description>&lt;p&gt;&lt;em&gt;Normally, we classify cloud service to private cloud service, public cloud service, and hybrid cloud service&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is SDLC?</title>
      <link>https://ifulltest.github.io/en/posts/what-is-sdlc/</link>
      <pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/what-is-sdlc/</guid>
      <description>&lt;p&gt;&lt;em&gt;The Software Development Life Cycle (SDLC) refers to a methodology with clearly defined processes for creating high-quality software. in detail, the SDLC methodology focuses on the following phases of software development&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is STLC?</title>
      <link>https://ifulltest.github.io/en/posts/what-is-stlc/</link>
      <pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/what-is-stlc/</guid>
      <description>&lt;p&gt;&lt;em&gt;Software Testing Life Cycle (STLC) refers to a testing process which has specific steps to be executed in a definite sequence to ensure that the quality goals have been met. In the STLC process, each activity is carried out in a planned and systematic way. Each phase has different goals and deliverables. the STLC methodology focuses on the following phases of software development&amp;hellip;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Why do we need a separate test environment?</title>
      <link>https://ifulltest.github.io/en/posts/why-do-we-need-a-separate-test-environment/</link>
      <pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/why-do-we-need-a-separate-test-environment/</guid>
      <description>&lt;p&gt;&lt;em&gt;The typical classification of environment for IT products is as below. Separate environments will make sure different roles using their own environment. To focus on different test purposes.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Also, will do their test work parallelly, improve efficiency, reduce disturbance from each other&lt;/em&gt;&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://ifulltest.github.io/en/posts/about-me/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ifulltest.github.io/en/posts/about-me/</guid>
      <description>&lt;h2 id=&#34;who-am-i&#34;&gt;Who Am I&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;10+ years old testing veteran. Expertise in performance testing, automation testing, knowledge sharing, and testing team-building.&lt;/li&gt;
&lt;li&gt;Big love delicious food, karaoke, NBA games, and Hollywood blockbuster!&lt;/li&gt;
&lt;li&gt;My favourite singers: Michael Jackson, Whitney Houston, Mariah Carey.&lt;/li&gt;
&lt;li&gt;My favourite movie stars: Tom Hanks, Anthony Hopkins.&lt;/li&gt;
&lt;li&gt;My favourite sports stars: Mike Jordan, Kobe Bryant, Stephen Curry, Ronaldo.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
